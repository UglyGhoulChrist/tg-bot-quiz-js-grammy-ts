import { listQuiz } from './list-quiz-dev'
import { IQuiz } from './quiz.interface'

export class Quiz implements IQuiz {
    id: number
    question: string
    options: string[]
    correct: number
    explanation: string
    _isCorrect: boolean = false

    constructor() {
        const randomIndex = Math.floor(Math.random() * listQuiz.length)
        const randomQuestion = listQuiz[randomIndex]
        this.id = randomQuestion.id
        this.question = randomQuestion.question
        this.options = randomQuestion.options
        this.correct = randomQuestion.correct
        this.explanation = randomQuestion.explanation
        // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç
        this._isCorrect = false
    }

    set isCorrect(value: number) {
        if (value in [0, 1, 2, 3]) {
            this._isCorrect = value === this.correct
        } else {
            console.error('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å `0`, `1`, `2` –∏–ª–∏ `3`')
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ HTML —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ —Å–ø–∏—Å–∫–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
    getQuestionAndOptionsHTML() {
        return `<b>–ß—Ç–æ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å?</b>\n
<pre><code>${this.question}</code></pre>\n
<b>–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:</b>
–í–∞—Ä–∏–∞–Ω—Ç 1: ${this.options[0]}
–í–∞—Ä–∏–∞–Ω—Ç 2: ${this.options[1]}
–í–∞—Ä–∏–∞–Ω—Ç 3: ${this.options[2]}
–í–∞—Ä–∏–∞–Ω—Ç 4: ${this.options[3]}`
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ HTML –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
    getIsCorrectAndExplanationHTML() {
        return `<b>${this._isCorrect ? '‚úÖ –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!' : 'ü§Æ –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!'}
\n–ü–æ—è—Å–Ω–µ–Ω–∏–µ:</b>
<span class='tg-spoiler'>${this.explanation}</span>`
    }
}